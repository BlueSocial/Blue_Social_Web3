{
  "abi": [
    {
      "type": "constructor",
      "inputs": [
        {
          "name": "initialOwner",
          "type": "address",
          "internalType": "address"
        },
        { "name": "_blueToken", "type": "address", "internalType": "address" },
        {
          "name": "_rewardValue",
          "type": "uint256",
          "internalType": "uint256"
        },
        { "name": "_treasury", "type": "address", "internalType": "address" },
        { "name": "_admin", "type": "address", "internalType": "address" }
      ],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "admin",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "contactExchange",
      "inputs": [
        {
          "name": "hashedUserIds",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "exchangeContact",
      "inputs": [
        {
          "name": "_userAddress",
          "type": "address",
          "internalType": "address"
        },
        { "name": "_userId", "type": "uint256", "internalType": "uint256" },
        {
          "name": "_contactAddress",
          "type": "address",
          "internalType": "address"
        },
        { "name": "_contactId", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "getRewardValue",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "i_blueToken",
      "inputs": [],
      "outputs": [
        { "name": "", "type": "address", "internalType": "contract IERC20" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "owner",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "renounceOwnership",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "rewardValue",
      "inputs": [],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "transferOwnership",
      "inputs": [
        { "name": "newOwner", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "treasury",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "event",
      "name": "ContactExchange",
      "inputs": [
        {
          "name": "user",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "contact",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "reward",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OwnershipTransferred",
      "inputs": [
        {
          "name": "previousOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "AddressEmptyCode",
      "inputs": [
        { "name": "target", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "AddressInsufficientBalance",
      "inputs": [
        { "name": "account", "type": "address", "internalType": "address" }
      ]
    },
    { "type": "error", "name": "ContactAlreadyExchanged", "inputs": [] },
    { "type": "error", "name": "FailedInnerCall", "inputs": [] },
    {
      "type": "error",
      "name": "OwnableInvalidOwner",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "OwnableUnauthorizedAccount",
      "inputs": [
        { "name": "account", "type": "address", "internalType": "address" }
      ]
    },
    { "type": "error", "name": "ReentrancyGuardReentrantCall", "inputs": [] },
    {
      "type": "error",
      "name": "SafeERC20FailedOperation",
      "inputs": [
        { "name": "token", "type": "address", "internalType": "address" }
      ]
    },
    { "type": "error", "name": "SameUserError", "inputs": [] }
  ],
  "bytecode": {
    "object": "0x60a060405234801561001057600080fd5b5060405161131d38038061131d833981810160405281019061003291906102e0565b84600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036100a55760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161009c919061036a565b60405180910390fd5b6100b48161018360201b60201c565b50600180819055508373ffffffffffffffffffffffffffffffffffffffff1660808173ffffffffffffffffffffffffffffffffffffffff16815250508260048190555081600260006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600360006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050505050610385565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006102778261024c565b9050919050565b6102878161026c565b811461029257600080fd5b50565b6000815190506102a48161027e565b92915050565b6000819050919050565b6102bd816102aa565b81146102c857600080fd5b50565b6000815190506102da816102b4565b92915050565b600080600080600060a086880312156102fc576102fb610247565b5b600061030a88828901610295565b955050602061031b88828901610295565b945050604061032c888289016102cb565b935050606061033d88828901610295565b925050608061034e88828901610295565b9150509295509295909350565b6103648161026c565b82525050565b600060208201905061037f600083018461035b565b92915050565b608051610f766103a7600039600081816104a7015261063c0152610f766000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c8063715018a611610066578063715018a6146101495780638da5cb5b14610153578063f2fde38b14610171578063f851a4401461018d578063fae128d6146101ab5761009e565b80630f2bdef6146100a357806312c7df73146100c1578063135aa08b146100df5780634d9438e5146100fb57806361d027b31461012b575b600080fd5b6100ab6101c9565b6040516100b89190610aca565b60405180910390f35b6100c96101d3565b6040516100d69190610aca565b60405180910390f35b6100f960048036038101906100f49190610b74565b6101d9565b005b61011560048036038101906101109190610bdb565b610376565b6040516101229190610c23565b60405180910390f35b610133610396565b6040516101409190610c4d565b60405180910390f35b6101516103bc565b005b61015b6103d0565b6040516101689190610c4d565b60405180910390f35b61018b60048036038101906101869190610c68565b6103f9565b005b61019561047f565b6040516101a29190610c4d565b60405180910390f35b6101b36104a5565b6040516101c09190610cf4565b60405180910390f35b6000600454905090565b60045481565b6101e16104c9565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610271576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026890610d92565b60405180910390fd5b600061027d848361050f565b90506005600082815260200190815260200160002060009054906101000a900460ff16156102d7576040517f5a2122d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016005600083815260200190815260200160002060006101000a81548160ff02191690831515021790555061030c856105ba565b610315836105ba565b8473ffffffffffffffffffffffffffffffffffffffff167ffa1e231376c88f3a17e8fcc76aa11fcc90aeacdab2302878e109bc1fb6fd279f8460045460405161035f929190610db2565b60405180910390a250610370610685565b50505050565b60056020528060005260406000206000915054906101000a900460ff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6103c461068e565b6103ce6000610715565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61040161068e565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036104735760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161046a9190610c4d565b60405180910390fd5b61047c81610715565b50565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600260015403610505576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600181905550565b600081830361054a576040517f1ce1c12000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81831115610585578282604051602001610565929190610dfc565b6040516020818303038152906040528051906020012060001c90506105b4565b8183604051602001610598929190610dfc565b6040516020818303038152906040528051906020012060001c90505b92915050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16031561068257610681600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16826004547f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166107d9909392919063ffffffff16565b5b50565b60018081905550565b61069661085b565b73ffffffffffffffffffffffffffffffffffffffff166106b46103d0565b73ffffffffffffffffffffffffffffffffffffffff1614610713576106d761085b565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161070a9190610c4d565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610855848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161080e93929190610e28565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610863565b50505050565b600033905090565b600061088e828473ffffffffffffffffffffffffffffffffffffffff166108fa90919063ffffffff16565b905060008151141580156108b35750808060200190518101906108b19190610e8b565b155b156108f557826040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016108ec9190610c4d565b60405180910390fd5b505050565b606061090883836000610910565b905092915050565b60608147101561095757306040517fcd78605900000000000000000000000000000000000000000000000000000000815260040161094e9190610c4d565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff1684866040516109809190610f29565b60006040518083038185875af1925050503d80600081146109bd576040519150601f19603f3d011682016040523d82523d6000602084013e6109c2565b606091505b50915091506109d28683836109dd565b925050509392505050565b6060826109f2576109ed82610a6c565b610a64565b60008251148015610a1a575060008473ffffffffffffffffffffffffffffffffffffffff163b145b15610a5c57836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401610a539190610c4d565b60405180910390fd5b819050610a65565b5b9392505050565b600081511115610a7f5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000819050919050565b610ac481610ab1565b82525050565b6000602082019050610adf6000830184610abb565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b1582610aea565b9050919050565b610b2581610b0a565b8114610b3057600080fd5b50565b600081359050610b4281610b1c565b92915050565b610b5181610ab1565b8114610b5c57600080fd5b50565b600081359050610b6e81610b48565b92915050565b60008060008060808587031215610b8e57610b8d610ae5565b5b6000610b9c87828801610b33565b9450506020610bad87828801610b5f565b9350506040610bbe87828801610b33565b9250506060610bcf87828801610b5f565b91505092959194509250565b600060208284031215610bf157610bf0610ae5565b5b6000610bff84828501610b5f565b91505092915050565b60008115159050919050565b610c1d81610c08565b82525050565b6000602082019050610c386000830184610c14565b92915050565b610c4781610b0a565b82525050565b6000602082019050610c626000830184610c3e565b92915050565b600060208284031215610c7e57610c7d610ae5565b5b6000610c8c84828501610b33565b91505092915050565b6000819050919050565b6000610cba610cb5610cb084610aea565b610c95565b610aea565b9050919050565b6000610ccc82610c9f565b9050919050565b6000610cde82610cc1565b9050919050565b610cee81610cd3565b82525050565b6000602082019050610d096000830184610ce5565b92915050565b600082825260208201905092915050565b7f4f6e6c792061646d696e2063616e2063616c6c20746869732066756e6374696f60008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b6000610d7c602183610d0f565b9150610d8782610d20565b604082019050919050565b60006020820190508181036000830152610dab81610d6f565b9050919050565b6000604082019050610dc76000830185610c3e565b610dd46020830184610abb565b9392505050565b6000819050919050565b610df6610df182610ab1565b610ddb565b82525050565b6000610e088285610de5565b602082019150610e188284610de5565b6020820191508190509392505050565b6000606082019050610e3d6000830186610c3e565b610e4a6020830185610c3e565b610e576040830184610abb565b949350505050565b610e6881610c08565b8114610e7357600080fd5b50565b600081519050610e8581610e5f565b92915050565b600060208284031215610ea157610ea0610ae5565b5b6000610eaf84828501610e76565b91505092915050565b600081519050919050565b600081905092915050565b60005b83811015610eec578082015181840152602081019050610ed1565b60008484015250505050565b6000610f0382610eb8565b610f0d8185610ec3565b9350610f1d818560208601610ece565b80840191505092915050565b6000610f358284610ef8565b91508190509291505056fea264697066735822122031ac4f692e51e60a6e893c7336dd2e6de84f4ccae0c28a03febc3e3d46b80dab64736f6c63430008190033",
    "sourceMap": "484:3355:44:-:0;;;1324:318;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1489:12;1297:1:34;1273:26;;:12;:26;;;1269:95;;1350:1;1322:31;;;;;;;;;;;:::i;:::-;;;;;;;;1269:95;1373:32;1392:12;1373:18;;;:32;;:::i;:::-;1225:187;1713:1:40;1917:7;:21;;;;1534:10:44::1;1513:32;;;;;;;;::::0;::::1;1569:12;1555:11;:26;;;;1602:9;1591:8;;:20;;;;;;;;;;;;;;;;;;1629:6;1621:5;;:14;;;;;;;;;;;;;;;;;;1324:318:::0;;;;;484:3355;;2912:187:34;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;88:117:53:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:143::-;753:5;784:6;778:13;769:22;;800:33;827:5;800:33;:::i;:::-;696:143;;;;:::o;845:77::-;882:7;911:5;900:16;;845:77;;;:::o;928:122::-;1001:24;1019:5;1001:24;:::i;:::-;994:5;991:35;981:63;;1040:1;1037;1030:12;981:63;928:122;:::o;1056:143::-;1113:5;1144:6;1138:13;1129:22;;1160:33;1187:5;1160:33;:::i;:::-;1056:143;;;;:::o;1205:977::-;1311:6;1319;1327;1335;1343;1392:3;1380:9;1371:7;1367:23;1363:33;1360:120;;;1399:79;;:::i;:::-;1360:120;1519:1;1544:64;1600:7;1591:6;1580:9;1576:22;1544:64;:::i;:::-;1534:74;;1490:128;1657:2;1683:64;1739:7;1730:6;1719:9;1715:22;1683:64;:::i;:::-;1673:74;;1628:129;1796:2;1822:64;1878:7;1869:6;1858:9;1854:22;1822:64;:::i;:::-;1812:74;;1767:129;1935:2;1961:64;2017:7;2008:6;1997:9;1993:22;1961:64;:::i;:::-;1951:74;;1906:129;2074:3;2101:64;2157:7;2148:6;2137:9;2133:22;2101:64;:::i;:::-;2091:74;;2045:130;1205:977;;;;;;;;:::o;2188:118::-;2275:24;2293:5;2275:24;:::i;:::-;2270:3;2263:37;2188:118;;:::o;2312:222::-;2405:4;2443:2;2432:9;2428:18;2420:26;;2456:71;2524:1;2513:9;2509:17;2500:6;2456:71;:::i;:::-;2312:222;;;;:::o;484:3355:44:-;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061009e5760003560e01c8063715018a611610066578063715018a6146101495780638da5cb5b14610153578063f2fde38b14610171578063f851a4401461018d578063fae128d6146101ab5761009e565b80630f2bdef6146100a357806312c7df73146100c1578063135aa08b146100df5780634d9438e5146100fb57806361d027b31461012b575b600080fd5b6100ab6101c9565b6040516100b89190610aca565b60405180910390f35b6100c96101d3565b6040516100d69190610aca565b60405180910390f35b6100f960048036038101906100f49190610b74565b6101d9565b005b61011560048036038101906101109190610bdb565b610376565b6040516101229190610c23565b60405180910390f35b610133610396565b6040516101409190610c4d565b60405180910390f35b6101516103bc565b005b61015b6103d0565b6040516101689190610c4d565b60405180910390f35b61018b60048036038101906101869190610c68565b6103f9565b005b61019561047f565b6040516101a29190610c4d565b60405180910390f35b6101b36104a5565b6040516101c09190610cf4565b60405180910390f35b6000600454905090565b60045481565b6101e16104c9565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610271576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161026890610d92565b60405180910390fd5b600061027d848361050f565b90506005600082815260200190815260200160002060009054906101000a900460ff16156102d7576040517f5a2122d100000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60016005600083815260200190815260200160002060006101000a81548160ff02191690831515021790555061030c856105ba565b610315836105ba565b8473ffffffffffffffffffffffffffffffffffffffff167ffa1e231376c88f3a17e8fcc76aa11fcc90aeacdab2302878e109bc1fb6fd279f8460045460405161035f929190610db2565b60405180910390a250610370610685565b50505050565b60056020528060005260406000206000915054906101000a900460ff1681565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6103c461068e565b6103ce6000610715565b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b61040161068e565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036104735760006040517f1e4fbdf700000000000000000000000000000000000000000000000000000000815260040161046a9190610c4d565b60405180910390fd5b61047c81610715565b50565b600360009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b7f000000000000000000000000000000000000000000000000000000000000000081565b600260015403610505576040517f3ee5aeb500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6002600181905550565b600081830361054a576040517f1ce1c12000000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b81831115610585578282604051602001610565929190610dfc565b6040516020818303038152906040528051906020012060001c90506105b4565b8183604051602001610598929190610dfc565b6040516020818303038152906040528051906020012060001c90505b92915050565b600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16031561068257610681600260009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16826004547f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff166107d9909392919063ffffffff16565b5b50565b60018081905550565b61069661085b565b73ffffffffffffffffffffffffffffffffffffffff166106b46103d0565b73ffffffffffffffffffffffffffffffffffffffff1614610713576106d761085b565b6040517f118cdaa700000000000000000000000000000000000000000000000000000000815260040161070a9190610c4d565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b610855848573ffffffffffffffffffffffffffffffffffffffff166323b872dd86868660405160240161080e93929190610e28565b604051602081830303815290604052915060e01b6020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff8381831617835250505050610863565b50505050565b600033905090565b600061088e828473ffffffffffffffffffffffffffffffffffffffff166108fa90919063ffffffff16565b905060008151141580156108b35750808060200190518101906108b19190610e8b565b155b156108f557826040517f5274afe70000000000000000000000000000000000000000000000000000000081526004016108ec9190610c4d565b60405180910390fd5b505050565b606061090883836000610910565b905092915050565b60608147101561095757306040517fcd78605900000000000000000000000000000000000000000000000000000000815260040161094e9190610c4d565b60405180910390fd5b6000808573ffffffffffffffffffffffffffffffffffffffff1684866040516109809190610f29565b60006040518083038185875af1925050503d80600081146109bd576040519150601f19603f3d011682016040523d82523d6000602084013e6109c2565b606091505b50915091506109d28683836109dd565b925050509392505050565b6060826109f2576109ed82610a6c565b610a64565b60008251148015610a1a575060008473ffffffffffffffffffffffffffffffffffffffff163b145b15610a5c57836040517f9996b315000000000000000000000000000000000000000000000000000000008152600401610a539190610c4d565b60405180910390fd5b819050610a65565b5b9392505050565b600081511115610a7f5780518082602001fd5b6040517f1425ea4200000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6000819050919050565b610ac481610ab1565b82525050565b6000602082019050610adf6000830184610abb565b92915050565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610b1582610aea565b9050919050565b610b2581610b0a565b8114610b3057600080fd5b50565b600081359050610b4281610b1c565b92915050565b610b5181610ab1565b8114610b5c57600080fd5b50565b600081359050610b6e81610b48565b92915050565b60008060008060808587031215610b8e57610b8d610ae5565b5b6000610b9c87828801610b33565b9450506020610bad87828801610b5f565b9350506040610bbe87828801610b33565b9250506060610bcf87828801610b5f565b91505092959194509250565b600060208284031215610bf157610bf0610ae5565b5b6000610bff84828501610b5f565b91505092915050565b60008115159050919050565b610c1d81610c08565b82525050565b6000602082019050610c386000830184610c14565b92915050565b610c4781610b0a565b82525050565b6000602082019050610c626000830184610c3e565b92915050565b600060208284031215610c7e57610c7d610ae5565b5b6000610c8c84828501610b33565b91505092915050565b6000819050919050565b6000610cba610cb5610cb084610aea565b610c95565b610aea565b9050919050565b6000610ccc82610c9f565b9050919050565b6000610cde82610cc1565b9050919050565b610cee81610cd3565b82525050565b6000602082019050610d096000830184610ce5565b92915050565b600082825260208201905092915050565b7f4f6e6c792061646d696e2063616e2063616c6c20746869732066756e6374696f60008201527f6e00000000000000000000000000000000000000000000000000000000000000602082015250565b6000610d7c602183610d0f565b9150610d8782610d20565b604082019050919050565b60006020820190508181036000830152610dab81610d6f565b9050919050565b6000604082019050610dc76000830185610c3e565b610dd46020830184610abb565b9392505050565b6000819050919050565b610df6610df182610ab1565b610ddb565b82525050565b6000610e088285610de5565b602082019150610e188284610de5565b6020820191508190509392505050565b6000606082019050610e3d6000830186610c3e565b610e4a6020830185610c3e565b610e576040830184610abb565b949350505050565b610e6881610c08565b8114610e7357600080fd5b50565b600081519050610e8581610e5f565b92915050565b600060208284031215610ea157610ea0610ae5565b5b6000610eaf84828501610e76565b91505092915050565b600081519050919050565b600081905092915050565b60005b83811015610eec578082015181840152602081019050610ed1565b60008484015250505050565b6000610f0382610eb8565b610f0d8185610ec3565b9350610f1d818560208601610ece565b80840191505092915050565b6000610f358284610ef8565b91508190509291505056fea264697066735822122031ac4f692e51e60a6e893c7336dd2e6de84f4ccae0c28a03febc3e3d46b80dab64736f6c63430008190033",
    "sourceMap": "484:3355:44:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3246:91;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;757:26;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2461:563;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;790:61;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;702:23;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2293:101:34;;;:::i;:::-;;1638:85;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2543:215;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;731:20:44;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;661:35;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3246:91;3293:7;3319:11;;3312:18;;3246:91;:::o;757:26::-;;;;:::o;2461:563::-;2356:21:40;:19;:21::i;:::-;1257:5:44::1;;;;;;;;;;;1243:19;;:10;:19;;;1235:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;2650:21:::2;2674:32;2686:7;2695:10;2674:11;:32::i;:::-;2650:56;;2720:15;:30;2736:13;2720:30;;;;;;;;;;;;;;;;;;;;;2716:93;;;2773:25;;;;;;;;;;;;;;2716:93;2852:4;2819:15;:30;2835:13;2819:30;;;;;;;;;;;;:37;;;;;;;;;;;;;;;;;;2867:31;2885:12;2867:17;:31::i;:::-;2908:34;2926:15;2908:17;:34::i;:::-;2974:12;2958:59;;;2988:15;3005:11;;2958:59;;;;;;;:::i;:::-;;;;;;;;2640:384;2398:20:40::0;:18;:20::i;:::-;2461:563:44;;;;:::o;790:61::-;;;;;;;;;;;;;;;;;;;;;;:::o;702:23::-;;;;;;;;;;;;;:::o;2293:101:34:-;1531:13;:11;:13::i;:::-;2357:30:::1;2384:1;2357:18;:30::i;:::-;2293:101::o:0;1638:85::-;1684:7;1710:6;;;;;;;;;;;1703:13;;1638:85;:::o;2543:215::-;1531:13;:11;:13::i;:::-;2647:1:::1;2627:22;;:8;:22;;::::0;2623:91:::1;;2700:1;2672:31;;;;;;;;;;;:::i;:::-;;;;;;;;2623:91;2723:28;2742:8;2723:18;:28::i;:::-;2543:215:::0;:::o;731:20:44:-;;;;;;;;;;;;;:::o;661:35::-;;;:::o;2431:307:40:-;1755:1;2558:7;;:18;2554:86;;2599:30;;;;;;;;;;;;;;2554:86;1755:1;2714:7;:17;;;;2431:307::o;1648:430:44:-;1746:14;1786:6;1776;:16;1772:69;;1815:15;;;;;;;;;;;;;;1772:69;1863:6;1854;:15;1850:199;;;1929:6;1937;1912:32;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1902:43;;;;;;1894:52;;1885:61;;1850:199;;;2021:6;2029;2004:32;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1994:43;;;;;;1986:52;;1977:61;;1850:199;1648:430;;;;:::o;3030:210::-;3118:8;;;;;;;;;;;3102:24;;:12;:24;;;3098:61;3142:7;3098:61;3168:65;3197:8;;;;;;;;;;;3207:12;3221:11;;3168;:28;;;;:65;;;;;;:::i;:::-;3030:210;;:::o;2744:208:40:-;1713:1;2924:7;:21;;;;2744:208::o;1796:162:34:-;1866:12;:10;:12::i;:::-;1855:23;;:7;:5;:7::i;:::-;:23;;;1851:101;;1928:12;:10;:12::i;:::-;1901:40;;;;;;;;;;;:::i;:::-;;;;;;;;1851:101;1796:162::o;2912:187::-;2985:16;3004:6;;;;;;;;;;;2985:25;;3029:8;3020:6;;:17;;;;;;;;;;;;;;;;;;3083:8;3052:40;;3073:8;3052:40;;;;;;;;;;;;2975:124;2912:187;:::o;1702:188:37:-;1802:81;1822:5;1844;:18;;;1865:4;1871:2;1875:5;1829:53;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1802:19;:81::i;:::-;1702:188;;;;:::o;656:96:39:-;709:7;735:10;728:17;;656:96;:::o;4059:629:37:-;4478:23;4504:33;4532:4;4512:5;4504:27;;;;:33;;;;:::i;:::-;4478:59;;4572:1;4551:10;:17;:22;;:57;;;;;4589:10;4578:30;;;;;;;;;;;;:::i;:::-;4577:31;4551:57;4547:135;;;4664:5;4631:40;;;;;;;;;;;:::i;:::-;;;;;;;;4547:135;4129:559;4059:629;;:::o;2705:151:38:-;2780:12;2811:38;2833:6;2841:4;2847:1;2811:21;:38::i;:::-;2804:45;;2705:151;;;;:::o;3180:392::-;3279:12;3331:5;3307:21;:29;3303:108;;;3394:4;3359:41;;;;;;;;;;;:::i;:::-;;;;;;;;3303:108;3421:12;3435:23;3462:6;:11;;3481:5;3488:4;3462:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3420:73;;;;3510:55;3537:6;3545:7;3554:10;3510:26;:55::i;:::-;3503:62;;;;3180:392;;;;;:::o;4625:582::-;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5066:1;5045:10;:17;:22;:49;;;;;5093:1;5071:6;:18;;;:23;5045:49;5041:119;;;5138:6;5121:24;;;;;;;;;;;:::i;:::-;;;;;;;;5041:119;5180:10;5173:17;;;;4793:408;4625:582;;;;;;:::o;5743:516::-;5894:1;5874:10;:17;:21;5870:383;;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;;;;;;;;;;;;;7:77:53;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;523:117::-;632:1;629;622:12;769:126;806:7;846:42;839:5;835:54;824:65;;769:126;;;:::o;901:96::-;938:7;967:24;985:5;967:24;:::i;:::-;956:35;;901:96;;;:::o;1003:122::-;1076:24;1094:5;1076:24;:::i;:::-;1069:5;1066:35;1056:63;;1115:1;1112;1105:12;1056:63;1003:122;:::o;1131:139::-;1177:5;1215:6;1202:20;1193:29;;1231:33;1258:5;1231:33;:::i;:::-;1131:139;;;;:::o;1276:122::-;1349:24;1367:5;1349:24;:::i;:::-;1342:5;1339:35;1329:63;;1388:1;1385;1378:12;1329:63;1276:122;:::o;1404:139::-;1450:5;1488:6;1475:20;1466:29;;1504:33;1531:5;1504:33;:::i;:::-;1404:139;;;;:::o;1549:765::-;1635:6;1643;1651;1659;1708:3;1696:9;1687:7;1683:23;1679:33;1676:120;;;1715:79;;:::i;:::-;1676:120;1835:1;1860:53;1905:7;1896:6;1885:9;1881:22;1860:53;:::i;:::-;1850:63;;1806:117;1962:2;1988:53;2033:7;2024:6;2013:9;2009:22;1988:53;:::i;:::-;1978:63;;1933:118;2090:2;2116:53;2161:7;2152:6;2141:9;2137:22;2116:53;:::i;:::-;2106:63;;2061:118;2218:2;2244:53;2289:7;2280:6;2269:9;2265:22;2244:53;:::i;:::-;2234:63;;2189:118;1549:765;;;;;;;:::o;2320:329::-;2379:6;2428:2;2416:9;2407:7;2403:23;2399:32;2396:119;;;2434:79;;:::i;:::-;2396:119;2554:1;2579:53;2624:7;2615:6;2604:9;2600:22;2579:53;:::i;:::-;2569:63;;2525:117;2320:329;;;;:::o;2655:90::-;2689:7;2732:5;2725:13;2718:21;2707:32;;2655:90;;;:::o;2751:109::-;2832:21;2847:5;2832:21;:::i;:::-;2827:3;2820:34;2751:109;;:::o;2866:210::-;2953:4;2991:2;2980:9;2976:18;2968:26;;3004:65;3066:1;3055:9;3051:17;3042:6;3004:65;:::i;:::-;2866:210;;;;:::o;3082:118::-;3169:24;3187:5;3169:24;:::i;:::-;3164:3;3157:37;3082:118;;:::o;3206:222::-;3299:4;3337:2;3326:9;3322:18;3314:26;;3350:71;3418:1;3407:9;3403:17;3394:6;3350:71;:::i;:::-;3206:222;;;;:::o;3434:329::-;3493:6;3542:2;3530:9;3521:7;3517:23;3513:32;3510:119;;;3548:79;;:::i;:::-;3510:119;3668:1;3693:53;3738:7;3729:6;3718:9;3714:22;3693:53;:::i;:::-;3683:63;;3639:117;3434:329;;;;:::o;3769:60::-;3797:3;3818:5;3811:12;;3769:60;;;:::o;3835:142::-;3885:9;3918:53;3936:34;3945:24;3963:5;3945:24;:::i;:::-;3936:34;:::i;:::-;3918:53;:::i;:::-;3905:66;;3835:142;;;:::o;3983:126::-;4033:9;4066:37;4097:5;4066:37;:::i;:::-;4053:50;;3983:126;;;:::o;4115:142::-;4181:9;4214:37;4245:5;4214:37;:::i;:::-;4201:50;;4115:142;;;:::o;4263:163::-;4366:53;4413:5;4366:53;:::i;:::-;4361:3;4354:66;4263:163;;:::o;4432:254::-;4541:4;4579:2;4568:9;4564:18;4556:26;;4592:87;4676:1;4665:9;4661:17;4652:6;4592:87;:::i;:::-;4432:254;;;;:::o;4692:169::-;4776:11;4810:6;4805:3;4798:19;4850:4;4845:3;4841:14;4826:29;;4692:169;;;;:::o;4867:220::-;5007:34;5003:1;4995:6;4991:14;4984:58;5076:3;5071:2;5063:6;5059:15;5052:28;4867:220;:::o;5093:366::-;5235:3;5256:67;5320:2;5315:3;5256:67;:::i;:::-;5249:74;;5332:93;5421:3;5332:93;:::i;:::-;5450:2;5445:3;5441:12;5434:19;;5093:366;;;:::o;5465:419::-;5631:4;5669:2;5658:9;5654:18;5646:26;;5718:9;5712:4;5708:20;5704:1;5693:9;5689:17;5682:47;5746:131;5872:4;5746:131;:::i;:::-;5738:139;;5465:419;;;:::o;5890:332::-;6011:4;6049:2;6038:9;6034:18;6026:26;;6062:71;6130:1;6119:9;6115:17;6106:6;6062:71;:::i;:::-;6143:72;6211:2;6200:9;6196:18;6187:6;6143:72;:::i;:::-;5890:332;;;;;:::o;6228:79::-;6267:7;6296:5;6285:16;;6228:79;;;:::o;6313:157::-;6418:45;6438:24;6456:5;6438:24;:::i;:::-;6418:45;:::i;:::-;6413:3;6406:58;6313:157;;:::o;6476:397::-;6616:3;6631:75;6702:3;6693:6;6631:75;:::i;:::-;6731:2;6726:3;6722:12;6715:19;;6744:75;6815:3;6806:6;6744:75;:::i;:::-;6844:2;6839:3;6835:12;6828:19;;6864:3;6857:10;;6476:397;;;;;:::o;6879:442::-;7028:4;7066:2;7055:9;7051:18;7043:26;;7079:71;7147:1;7136:9;7132:17;7123:6;7079:71;:::i;:::-;7160:72;7228:2;7217:9;7213:18;7204:6;7160:72;:::i;:::-;7242;7310:2;7299:9;7295:18;7286:6;7242:72;:::i;:::-;6879:442;;;;;;:::o;7327:116::-;7397:21;7412:5;7397:21;:::i;:::-;7390:5;7387:32;7377:60;;7433:1;7430;7423:12;7377:60;7327:116;:::o;7449:137::-;7503:5;7534:6;7528:13;7519:22;;7550:30;7574:5;7550:30;:::i;:::-;7449:137;;;;:::o;7592:345::-;7659:6;7708:2;7696:9;7687:7;7683:23;7679:32;7676:119;;;7714:79;;:::i;:::-;7676:119;7834:1;7859:61;7912:7;7903:6;7892:9;7888:22;7859:61;:::i;:::-;7849:71;;7805:125;7592:345;;;;:::o;7943:98::-;7994:6;8028:5;8022:12;8012:22;;7943:98;;;:::o;8047:147::-;8148:11;8185:3;8170:18;;8047:147;;;;:::o;8200:248::-;8282:1;8292:113;8306:6;8303:1;8300:13;8292:113;;;8391:1;8386:3;8382:11;8376:18;8372:1;8367:3;8363:11;8356:39;8328:2;8325:1;8321:10;8316:15;;8292:113;;;8439:1;8430:6;8425:3;8421:16;8414:27;8262:186;8200:248;;;:::o;8454:386::-;8558:3;8586:38;8618:5;8586:38;:::i;:::-;8640:88;8721:6;8716:3;8640:88;:::i;:::-;8633:95;;8737:65;8795:6;8790:3;8783:4;8776:5;8772:16;8737:65;:::i;:::-;8827:6;8822:3;8818:16;8811:23;;8562:278;8454:386;;;;:::o;8846:271::-;8976:3;8998:93;9087:3;9078:6;8998:93;:::i;:::-;8991:100;;9108:3;9101:10;;8846:271;;;;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "50563": [
        { "start": 1191, "length": 32 },
        { "start": 1596, "length": 32 }
      ]
    }
  },
  "methodIdentifiers": {
    "admin()": "f851a440",
    "contactExchange(uint256)": "4d9438e5",
    "exchangeContact(address,uint256,address,uint256)": "135aa08b",
    "getRewardValue()": "0f2bdef6",
    "i_blueToken()": "fae128d6",
    "owner()": "8da5cb5b",
    "renounceOwnership()": "715018a6",
    "rewardValue()": "12c7df73",
    "transferOwnership(address)": "f2fde38b",
    "treasury()": "61d027b3"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.25+commit.b61c2a91\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_blueToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_rewardValue\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_treasury\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"AddressInsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ContactAlreadyExchanged\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ReentrancyGuardReentrantCall\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"}],\"name\":\"SafeERC20FailedOperation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"SameUserError\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"contact\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"reward\",\"type\":\"uint256\"}],\"name\":\"ContactExchange\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"admin\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"hashedUserIds\",\"type\":\"uint256\"}],\"name\":\"contactExchange\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_userAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_userId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_contactAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_contactId\",\"type\":\"uint256\"}],\"name\":\"exchangeContact\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getRewardValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"i_blueToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"rewardValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"treasury\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Hone1er\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"AddressInsufficientBalance(address)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"ReentrancyGuardReentrantCall()\":[{\"details\":\"Unauthorized reentrant call.\"}],\"SafeERC20FailedOperation(address)\":[{\"details\":\"An operation with an ERC20 token failed.\"}]},\"kind\":\"dev\",\"methods\":{\"exchangeContact(address,uint256,address,uint256)\":{\"details\":\"This function is only callable by the admin. If contactAddress does not exist use treasury address\",\"params\":{\"_contactAddress\":\"address of the contact\",\"_contactId\":\"ID of the contact\",\"_userAddress\":\"address of the user\",\"_userId\":\"ID of the user\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"title\":\"ExchangeOfContact\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"exchangeContact(address,uint256,address,uint256)\":{\"notice\":\"Reward for exchanging contact with another user\"}},\"notice\":\"A contract that rewards users for Exchange of Contact\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/ExchangeOfContact.sol\":\"ExchangeOfContact\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[\":@chainlink/contracts/=lib/chainlink/contracts/\",\":@forge-std/=lib/forge-std/src/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":chainlink/=lib/chainlink/contracts/\",\":ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol\":{\"keccak256\":\"0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d\",\"dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0\",\"dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol\":{\"keccak256\":\"0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02\",\"dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd\"]},\"src/ExchangeOfContact.sol\":{\"keccak256\":\"0x2690c7b49d1c52f1f63f2a9104068b853633237fc95e526594edcd5eda8850e1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8e120db7df2b2c1f752b119947774ab612b71bf220a7e74e985c84b0b977c9f5\",\"dweb:/ipfs/QmYiMVV6nHXybtcNu1vwo9FnsHAaBUVLsDw5Lj7Lon86YJ\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.25+commit.b61c2a91" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "initialOwner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_blueToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_rewardValue",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_treasury",
              "type": "address"
            },
            { "internalType": "address", "name": "_admin", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "target", "type": "address" }
          ],
          "type": "error",
          "name": "AddressEmptyCode"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "account", "type": "address" }
          ],
          "type": "error",
          "name": "AddressInsufficientBalance"
        },
        { "inputs": [], "type": "error", "name": "ContactAlreadyExchanged" },
        { "inputs": [], "type": "error", "name": "FailedInnerCall" },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" }
          ],
          "type": "error",
          "name": "OwnableInvalidOwner"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "account", "type": "address" }
          ],
          "type": "error",
          "name": "OwnableUnauthorizedAccount"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "ReentrancyGuardReentrantCall"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "token", "type": "address" }
          ],
          "type": "error",
          "name": "SafeERC20FailedOperation"
        },
        { "inputs": [], "type": "error", "name": "SameUserError" },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "contact",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "reward",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ContactExchange",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "admin",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "hashedUserIds",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "contactExchange",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_userAddress",
              "type": "address"
            },
            { "internalType": "uint256", "name": "_userId", "type": "uint256" },
            {
              "internalType": "address",
              "name": "_contactAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_contactId",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "exchangeContact"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getRewardValue",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "i_blueToken",
          "outputs": [
            { "internalType": "contract IERC20", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "rewardValue",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "newOwner", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "treasury",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "exchangeContact(address,uint256,address,uint256)": {
            "details": "This function is only callable by the admin. If contactAddress does not exist use treasury address",
            "params": {
              "_contactAddress": "address of the contact",
              "_contactId": "ID of the contact",
              "_userAddress": "address of the user",
              "_userId": "ID of the user"
            }
          },
          "owner()": { "details": "Returns the address of the current owner." },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "exchangeContact(address,uint256,address,uint256)": {
            "notice": "Reward for exchanging contact with another user"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@chainlink/contracts/=lib/chainlink/contracts/",
        "@forge-std/=lib/forge-std/src/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "chainlink/=lib/chainlink/contracts/",
        "ds-test/=lib/openzeppelin-contracts/lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": { "enabled": false, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": { "src/ExchangeOfContact.sol": "ExchangeOfContact" },
      "evmVersion": "paris",
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        "urls": [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Permit.sol": {
        "keccak256": "0x6008dabfe393240d73d7dd7688033f72740d570aa422254d29a7dce8568f3aff",
        "urls": [
          "bzz-raw://f5196ec75139918c6c7bb4251b36395e668f1fa6d206beba7e7520e74913940d",
          "dweb:/ipfs/QmSyqjksXxmm2mCG6qRd1yuwLykypkSVBbnBnGqJRcuJMi"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x37bb49513c49c87c4642a891b13b63571bc87013dde806617aa1efb54605f386",
        "urls": [
          "bzz-raw://b3036b3a83b7c48f96641f2a9002b9f2dcb6a5958dd670894ada21ae8229b3d0",
          "dweb:/ipfs/QmUNfSBdoVtjhETaUJCYcaC7pTMgbhht926tJ2uXJbiVd3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
        "urls": [
          "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
          "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol": {
        "keccak256": "0xf980daa263b661ab8ddee7d4fd833c7da7e7995e2c359ff1f17e67e4112f2236",
        "urls": [
          "bzz-raw://7448ab095d6940130bcf76ba47a2eab14148c83119523b93dd89f6d84edd6c02",
          "dweb:/ipfs/QmawrZ4voKQjH3oomXT3Kuheb3Mnmo2VvVpxg8Ne5UJUrd"
        ],
        "license": "MIT"
      },
      "src/ExchangeOfContact.sol": {
        "keccak256": "0x2690c7b49d1c52f1f63f2a9104068b853633237fc95e526594edcd5eda8850e1",
        "urls": [
          "bzz-raw://8e120db7df2b2c1f752b119947774ab612b71bf220a7e74e985c84b0b977c9f5",
          "dweb:/ipfs/QmYiMVV6nHXybtcNu1vwo9FnsHAaBUVLsDw5Lj7Lon86YJ"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/ExchangeOfContact.sol",
    "id": 50766,
    "exportedSymbols": {
      "ExchangeOfContact": [50765],
      "IERC20": [49293],
      "Ownable": [49215],
      "ReentrancyGuard": [49971],
      "SafeERC20": [49619]
    },
    "nodeType": "SourceUnit",
    "src": "32:3808:44",
    "nodes": [
      {
        "id": 50543,
        "nodeType": "PragmaDirective",
        "src": "32:24:44",
        "nodes": [],
        "literals": ["solidity", "^", "0.8", ".25"]
      },
      {
        "id": 50545,
        "nodeType": "ImportDirective",
        "src": "58:67:44",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50766,
        "sourceUnit": 49216,
        "symbolAliases": [
          {
            "foreign": {
              "id": 50544,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49215,
              "src": "66:7:44",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 50547,
        "nodeType": "ImportDirective",
        "src": "126:82:44",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/utils/ReentrancyGuard.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50766,
        "sourceUnit": 49972,
        "symbolAliases": [
          {
            "foreign": {
              "id": 50546,
              "name": "ReentrancyGuard",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49971,
              "src": "134:15:44",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 50549,
        "nodeType": "ImportDirective",
        "src": "209:70:44",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50766,
        "sourceUnit": 49294,
        "symbolAliases": [
          {
            "foreign": {
              "id": 50548,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49293,
              "src": "217:6:44",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 50551,
        "nodeType": "ImportDirective",
        "src": "280:82:44",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50766,
        "sourceUnit": 49620,
        "symbolAliases": [
          {
            "foreign": {
              "id": 50550,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49619,
              "src": "288:9:44",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 50765,
        "nodeType": "ContractDefinition",
        "src": "484:3355:44",
        "nodes": [
          {
            "id": 50560,
            "nodeType": "UsingForDirective",
            "src": "629:27:44",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 50557,
              "name": "SafeERC20",
              "nameLocations": ["635:9:44"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 49619,
              "src": "635:9:44"
            },
            "typeName": {
              "id": 50559,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 50558,
                "name": "IERC20",
                "nameLocations": ["649:6:44"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 49293,
                "src": "649:6:44"
              },
              "referencedDeclaration": 49293,
              "src": "649:6:44",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$49293",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 50563,
            "nodeType": "VariableDeclaration",
            "src": "661:35:44",
            "nodes": [],
            "constant": false,
            "functionSelector": "fae128d6",
            "mutability": "immutable",
            "name": "i_blueToken",
            "nameLocation": "685:11:44",
            "scope": 50765,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IERC20_$49293",
              "typeString": "contract IERC20"
            },
            "typeName": {
              "id": 50562,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 50561,
                "name": "IERC20",
                "nameLocations": ["661:6:44"],
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 49293,
                "src": "661:6:44"
              },
              "referencedDeclaration": 49293,
              "src": "661:6:44",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$49293",
                "typeString": "contract IERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 50565,
            "nodeType": "VariableDeclaration",
            "src": "702:23:44",
            "nodes": [],
            "constant": false,
            "functionSelector": "61d027b3",
            "mutability": "mutable",
            "name": "treasury",
            "nameLocation": "717:8:44",
            "scope": 50765,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 50564,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "702:7:44",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 50567,
            "nodeType": "VariableDeclaration",
            "src": "731:20:44",
            "nodes": [],
            "constant": false,
            "functionSelector": "f851a440",
            "mutability": "mutable",
            "name": "admin",
            "nameLocation": "746:5:44",
            "scope": 50765,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 50566,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "731:7:44",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 50569,
            "nodeType": "VariableDeclaration",
            "src": "757:26:44",
            "nodes": [],
            "constant": false,
            "functionSelector": "12c7df73",
            "mutability": "mutable",
            "name": "rewardValue",
            "nameLocation": "772:11:44",
            "scope": 50765,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 50568,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "757:7:44",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 50573,
            "nodeType": "VariableDeclaration",
            "src": "790:61:44",
            "nodes": [],
            "constant": false,
            "functionSelector": "4d9438e5",
            "mutability": "mutable",
            "name": "contactExchange",
            "nameLocation": "836:15:44",
            "scope": 50765,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
              "typeString": "mapping(uint256 => bool)"
            },
            "typeName": {
              "id": 50572,
              "keyName": "hashedUserIds",
              "keyNameLocation": "806:13:44",
              "keyType": {
                "id": 50570,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "798:7:44",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "nodeType": "Mapping",
              "src": "790:38:44",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                "typeString": "mapping(uint256 => bool)"
              },
              "valueName": "",
              "valueNameLocation": "-1:-1:-1",
              "valueType": {
                "id": 50571,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "823:4:44",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 50581,
            "nodeType": "EventDefinition",
            "src": "909:107:44",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "fa1e231376c88f3a17e8fcc76aa11fcc90aeacdab2302878e109bc1fb6fd279f",
            "name": "ContactExchange",
            "nameLocation": "915:15:44",
            "parameters": {
              "id": 50580,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50575,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "956:4:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 50581,
                  "src": "940:20:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50574,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "940:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50577,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "contact",
                  "nameLocation": "978:7:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 50581,
                  "src": "970:15:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50576,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "970:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50579,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "reward",
                  "nameLocation": "1003:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 50581,
                  "src": "995:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50578,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "995:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "930:85:44"
            }
          },
          {
            "id": 50583,
            "nodeType": "ErrorDefinition",
            "src": "1079:22:44",
            "nodes": [],
            "errorSelector": "1ce1c120",
            "name": "SameUserError",
            "nameLocation": "1085:13:44",
            "parameters": {
              "id": 50582,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1098:2:44"
            }
          },
          {
            "id": 50585,
            "nodeType": "ErrorDefinition",
            "src": "1106:32:44",
            "nodes": [],
            "errorSelector": "5a2122d1",
            "name": "ContactAlreadyExchanged",
            "nameLocation": "1112:23:44",
            "parameters": {
              "id": 50584,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1135:2:44"
            }
          },
          {
            "id": 50597,
            "nodeType": "ModifierDefinition",
            "src": "1204:114:44",
            "nodes": [],
            "body": {
              "id": 50596,
              "nodeType": "Block",
              "src": "1225:93:44",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 50591,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 50588,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1243:3:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 50589,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberLocation": "1247:6:44",
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1243:10:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 50590,
                          "name": "admin",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50567,
                          "src": "1257:5:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1243:19:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c792061646d696e2063616e2063616c6c20746869732066756e6374696f6e",
                        "id": 50592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1264:35:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e0ef19aa67a8b89b19419c8977a6a75d04286a47014bf7a3d2ea537634352c8b",
                          "typeString": "literal_string \"Only admin can call this function\""
                        },
                        "value": "Only admin can call this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        { "typeIdentifier": "t_bool", "typeString": "bool" },
                        {
                          "typeIdentifier": "t_stringliteral_e0ef19aa67a8b89b19419c8977a6a75d04286a47014bf7a3d2ea537634352c8b",
                          "typeString": "literal_string \"Only admin can call this function\""
                        }
                      ],
                      "id": 50587,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [-18, -18],
                      "referencedDeclaration": -18,
                      "src": "1235:7:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 50593,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1235:65:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50594,
                  "nodeType": "ExpressionStatement",
                  "src": "1235:65:44"
                },
                {
                  "id": 50595,
                  "nodeType": "PlaceholderStatement",
                  "src": "1310:1:44"
                }
              ]
            },
            "name": "onlyAdmin",
            "nameLocation": "1213:9:44",
            "parameters": {
              "id": 50586,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1222:2:44"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 50632,
            "nodeType": "FunctionDefinition",
            "src": "1324:318:44",
            "nodes": [],
            "body": {
              "id": 50631,
              "nodeType": "Block",
              "src": "1503:139:44",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 50617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50613,
                      "name": "i_blueToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50563,
                      "src": "1513:11:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$49293",
                        "typeString": "contract IERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 50615,
                          "name": "_blueToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50601,
                          "src": "1534:10:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 50614,
                        "name": "IERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 49293,
                        "src": "1527:6:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_IERC20_$49293_$",
                          "typeString": "type(contract IERC20)"
                        }
                      },
                      "id": 50616,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "nameLocations": [],
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1527:18:44",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$49293",
                        "typeString": "contract IERC20"
                      }
                    },
                    "src": "1513:32:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$49293",
                      "typeString": "contract IERC20"
                    }
                  },
                  "id": 50618,
                  "nodeType": "ExpressionStatement",
                  "src": "1513:32:44"
                },
                {
                  "expression": {
                    "id": 50621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50619,
                      "name": "rewardValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50569,
                      "src": "1555:11:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 50620,
                      "name": "_rewardValue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50603,
                      "src": "1569:12:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1555:26:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 50622,
                  "nodeType": "ExpressionStatement",
                  "src": "1555:26:44"
                },
                {
                  "expression": {
                    "id": 50625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50623,
                      "name": "treasury",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50565,
                      "src": "1591:8:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 50624,
                      "name": "_treasury",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50605,
                      "src": "1602:9:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1591:20:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 50626,
                  "nodeType": "ExpressionStatement",
                  "src": "1591:20:44"
                },
                {
                  "expression": {
                    "id": 50629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50627,
                      "name": "admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50567,
                      "src": "1621:5:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 50628,
                      "name": "_admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50607,
                      "src": "1629:6:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1621:14:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 50630,
                  "nodeType": "ExpressionStatement",
                  "src": "1621:14:44"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 50610,
                    "name": "initialOwner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 50599,
                    "src": "1489:12:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 50611,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 50609,
                  "name": "Ownable",
                  "nameLocations": ["1481:7:44"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 49215,
                  "src": "1481:7:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "1481:21:44"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 50608,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50599,
                  "mutability": "mutable",
                  "name": "initialOwner",
                  "nameLocation": "1353:12:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 50632,
                  "src": "1345:20:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50598,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1345:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50601,
                  "mutability": "mutable",
                  "name": "_blueToken",
                  "nameLocation": "1383:10:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 50632,
                  "src": "1375:18:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50600,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1375:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50603,
                  "mutability": "mutable",
                  "name": "_rewardValue",
                  "nameLocation": "1411:12:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 50632,
                  "src": "1403:20:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50602,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1403:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50605,
                  "mutability": "mutable",
                  "name": "_treasury",
                  "nameLocation": "1441:9:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 50632,
                  "src": "1433:17:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50604,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1433:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50607,
                  "mutability": "mutable",
                  "name": "_admin",
                  "nameLocation": "1468:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 50632,
                  "src": "1460:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50606,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1460:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1335:145:44"
            },
            "returnParameters": {
              "id": 50612,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1503:0:44"
            },
            "scope": 50765,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50684,
            "nodeType": "FunctionDefinition",
            "src": "1648:430:44",
            "nodes": [],
            "body": {
              "id": 50683,
              "nodeType": "Block",
              "src": "1762:316:44",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 50643,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 50641,
                      "name": "_userA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50634,
                      "src": "1776:6:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 50642,
                      "name": "_userB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50636,
                      "src": "1786:6:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1776:16:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 50648,
                  "nodeType": "IfStatement",
                  "src": "1772:69:44",
                  "trueBody": {
                    "id": 50647,
                    "nodeType": "Block",
                    "src": "1794:47:44",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 50644,
                            "name": "SameUserError",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50583,
                            "src": "1815:13:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 50645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1815:15:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 50646,
                        "nodeType": "RevertStatement",
                        "src": "1808:22:44"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 50651,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 50649,
                      "name": "_userA",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50634,
                      "src": "1854:6:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 50650,
                      "name": "_userB",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50636,
                      "src": "1863:6:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1854:15:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 50679,
                    "nodeType": "Block",
                    "src": "1963:86:44",
                    "statements": [
                      {
                        "expression": {
                          "id": 50677,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 50666,
                            "name": "result",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50639,
                            "src": "1977:6:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 50672,
                                        "name": "_userB",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 50636,
                                        "src": "2021:6:44",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "id": 50673,
                                        "name": "_userA",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 50634,
                                        "src": "2029:6:44",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 50670,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "2004:3:44",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 50671,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "2008:12:44",
                                      "memberName": "encodePacked",
                                      "nodeType": "MemberAccess",
                                      "src": "2004:16:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 50674,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2004:32:44",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 50669,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -8,
                                  "src": "1994:9:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 50675,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1994:43:44",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 50668,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1986:7:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 50667,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1986:7:44",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 50676,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1986:52:44",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1977:61:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 50678,
                        "nodeType": "ExpressionStatement",
                        "src": "1977:61:44"
                      }
                    ]
                  },
                  "id": 50680,
                  "nodeType": "IfStatement",
                  "src": "1850:199:44",
                  "trueBody": {
                    "id": 50665,
                    "nodeType": "Block",
                    "src": "1871:86:44",
                    "statements": [
                      {
                        "expression": {
                          "id": 50663,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 50652,
                            "name": "result",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50639,
                            "src": "1885:6:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 50658,
                                        "name": "_userA",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 50634,
                                        "src": "1929:6:44",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "id": 50659,
                                        "name": "_userB",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 50636,
                                        "src": "1937:6:44",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "expression": {
                                        "id": 50656,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "1912:3:44",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 50657,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberLocation": "1916:12:44",
                                      "memberName": "encodePacked",
                                      "nodeType": "MemberAccess",
                                      "src": "1912:16:44",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 50660,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "nameLocations": [],
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1912:32:44",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 50655,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -8,
                                  "src": "1902:9:44",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 50661,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "nameLocations": [],
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1902:43:44",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "id": 50654,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1894:7:44",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 50653,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "1894:7:44",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 50662,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "nameLocations": [],
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1894:52:44",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1885:61:44",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 50664,
                        "nodeType": "ExpressionStatement",
                        "src": "1885:61:44"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 50681,
                    "name": "result",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 50639,
                    "src": "2065:6:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 50640,
                  "id": 50682,
                  "nodeType": "Return",
                  "src": "2058:13:44"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "hashUserIds",
            "nameLocation": "1657:11:44",
            "parameters": {
              "id": 50637,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50634,
                  "mutability": "mutable",
                  "name": "_userA",
                  "nameLocation": "1686:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 50684,
                  "src": "1678:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50633,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1678:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50636,
                  "mutability": "mutable",
                  "name": "_userB",
                  "nameLocation": "1710:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 50684,
                  "src": "1702:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50635,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1702:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1668:54:44"
            },
            "returnParameters": {
              "id": 50640,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50639,
                  "mutability": "mutable",
                  "name": "result",
                  "nameLocation": "1754:6:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 50684,
                  "src": "1746:14:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50638,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1746:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1745:16:44"
            },
            "scope": 50765,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 50736,
            "nodeType": "FunctionDefinition",
            "src": "2461:563:44",
            "nodes": [],
            "body": {
              "id": 50735,
              "nodeType": "Block",
              "src": "2640:384:44",
              "nodes": [],
              "statements": [
                {
                  "assignments": [50701],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50701,
                      "mutability": "mutable",
                      "name": "hashedUserIds",
                      "nameLocation": "2658:13:44",
                      "nodeType": "VariableDeclaration",
                      "scope": 50735,
                      "src": "2650:21:44",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 50700,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2650:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50706,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 50703,
                        "name": "_userId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50689,
                        "src": "2686:7:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 50704,
                        "name": "_contactId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50693,
                        "src": "2695:10:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 50702,
                      "name": "hashUserIds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50684,
                      "src": "2674:11:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256) pure returns (uint256)"
                      }
                    },
                    "id": 50705,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2674:32:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2650:56:44"
                },
                {
                  "condition": {
                    "baseExpression": {
                      "id": 50707,
                      "name": "contactExchange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50573,
                      "src": "2720:15:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                        "typeString": "mapping(uint256 => bool)"
                      }
                    },
                    "id": 50709,
                    "indexExpression": {
                      "id": 50708,
                      "name": "hashedUserIds",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50701,
                      "src": "2736:13:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "2720:30:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 50714,
                  "nodeType": "IfStatement",
                  "src": "2716:93:44",
                  "trueBody": {
                    "id": 50713,
                    "nodeType": "Block",
                    "src": "2752:57:44",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 50710,
                            "name": "ContactAlreadyExchanged",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50585,
                            "src": "2773:23:44",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 50711,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2773:25:44",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 50712,
                        "nodeType": "RevertStatement",
                        "src": "2766:32:44"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 50719,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 50715,
                        "name": "contactExchange",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50573,
                        "src": "2819:15:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_uint256_$_t_bool_$",
                          "typeString": "mapping(uint256 => bool)"
                        }
                      },
                      "id": 50717,
                      "indexExpression": {
                        "id": 50716,
                        "name": "hashedUserIds",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50701,
                        "src": "2835:13:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2819:30:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 50718,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2852:4:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2819:37:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 50720,
                  "nodeType": "ExpressionStatement",
                  "src": "2819:37:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50722,
                        "name": "_userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50687,
                        "src": "2885:12:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 50721,
                      "name": "sendContactReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50756,
                      "src": "2867:17:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 50723,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2867:31:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50724,
                  "nodeType": "ExpressionStatement",
                  "src": "2867:31:44"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50726,
                        "name": "_contactAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50691,
                        "src": "2926:15:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 50725,
                      "name": "sendContactReward",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50756,
                      "src": "2908:17:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 50727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2908:34:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50728,
                  "nodeType": "ExpressionStatement",
                  "src": "2908:34:44"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 50730,
                        "name": "_userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50687,
                        "src": "2974:12:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 50731,
                        "name": "_contactAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50691,
                        "src": "2988:15:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 50732,
                        "name": "rewardValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50569,
                        "src": "3005:11:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 50729,
                      "name": "ContactExchange",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50581,
                      "src": "2958:15:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 50733,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2958:59:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50734,
                  "nodeType": "EmitStatement",
                  "src": "2953:64:44"
                }
              ]
            },
            "documentation": {
              "id": 50685,
              "nodeType": "StructuredDocumentation",
              "src": "2084:372:44",
              "text": " @param _userAddress address of the user\n @param _userId ID of the user\n @param _contactAddress address of the contact\n @param _contactId ID of the contact\n @notice Reward for exchanging contact with another user\n @dev This function is only callable by the admin. If contactAddress does not exist use treasury address"
            },
            "functionSelector": "135aa08b",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 50696,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 50695,
                  "name": "nonReentrant",
                  "nameLocations": ["2617:12:44"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 49935,
                  "src": "2617:12:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "2617:12:44"
              },
              {
                "id": 50698,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 50697,
                  "name": "onlyAdmin",
                  "nameLocations": ["2630:9:44"],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 50597,
                  "src": "2630:9:44"
                },
                "nodeType": "ModifierInvocation",
                "src": "2630:9:44"
              }
            ],
            "name": "exchangeContact",
            "nameLocation": "2470:15:44",
            "parameters": {
              "id": 50694,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50687,
                  "mutability": "mutable",
                  "name": "_userAddress",
                  "nameLocation": "2503:12:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 50736,
                  "src": "2495:20:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50686,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2495:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50689,
                  "mutability": "mutable",
                  "name": "_userId",
                  "nameLocation": "2533:7:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 50736,
                  "src": "2525:15:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50688,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2525:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50691,
                  "mutability": "mutable",
                  "name": "_contactAddress",
                  "nameLocation": "2558:15:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 50736,
                  "src": "2550:23:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50690,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2550:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50693,
                  "mutability": "mutable",
                  "name": "_contactId",
                  "nameLocation": "2591:10:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 50736,
                  "src": "2583:18:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50692,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2583:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2485:122:44"
            },
            "returnParameters": {
              "id": 50699,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2640:0:44"
            },
            "scope": 50765,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50756,
            "nodeType": "FunctionDefinition",
            "src": "3030:210:44",
            "nodes": [],
            "body": {
              "id": 50755,
              "nodeType": "Block",
              "src": "3088:152:44",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 50743,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 50741,
                      "name": "_userAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50738,
                      "src": "3102:12:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 50742,
                      "name": "treasury",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50565,
                      "src": "3118:8:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3102:24:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 50746,
                  "nodeType": "IfStatement",
                  "src": "3098:61:44",
                  "trueBody": {
                    "id": 50745,
                    "nodeType": "Block",
                    "src": "3128:31:44",
                    "statements": [
                      {
                        "functionReturnParameters": 50740,
                        "id": 50744,
                        "nodeType": "Return",
                        "src": "3142:7:44"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50750,
                        "name": "treasury",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50565,
                        "src": "3197:8:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 50751,
                        "name": "_userAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50738,
                        "src": "3207:12:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 50752,
                        "name": "rewardValue",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50569,
                        "src": "3221:11:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 50747,
                        "name": "i_blueToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50563,
                        "src": "3168:11:44",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$49293",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 50749,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "3180:16:44",
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49406,
                      "src": "3168:28:44",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$49293_$_t_address_$_t_address_$_t_uint256_$returns$__$attached_to$_t_contract$_IERC20_$49293_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 50753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3168:65:44",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50754,
                  "nodeType": "ExpressionStatement",
                  "src": "3168:65:44"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendContactReward",
            "nameLocation": "3039:17:44",
            "parameters": {
              "id": 50739,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50738,
                  "mutability": "mutable",
                  "name": "_userAddress",
                  "nameLocation": "3065:12:44",
                  "nodeType": "VariableDeclaration",
                  "scope": 50756,
                  "src": "3057:20:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50737,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3057:7:44",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3056:22:44"
            },
            "returnParameters": {
              "id": 50740,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3088:0:44"
            },
            "scope": 50765,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 50764,
            "nodeType": "FunctionDefinition",
            "src": "3246:91:44",
            "nodes": [],
            "body": {
              "id": 50763,
              "nodeType": "Block",
              "src": "3302:35:44",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 50761,
                    "name": "rewardValue",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 50569,
                    "src": "3319:11:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 50760,
                  "id": 50762,
                  "nodeType": "Return",
                  "src": "3312:18:44"
                }
              ]
            },
            "functionSelector": "0f2bdef6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getRewardValue",
            "nameLocation": "3255:14:44",
            "parameters": {
              "id": 50757,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3269:2:44"
            },
            "returnParameters": {
              "id": 50760,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50759,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50764,
                  "src": "3293:7:44",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50758,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3293:7:44",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3292:9:44"
            },
            "scope": 50765,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 50553,
              "name": "Ownable",
              "nameLocations": ["514:7:44"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 49215,
              "src": "514:7:44"
            },
            "id": 50554,
            "nodeType": "InheritanceSpecifier",
            "src": "514:7:44"
          },
          {
            "baseName": {
              "id": 50555,
              "name": "ReentrancyGuard",
              "nameLocations": ["523:15:44"],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 49971,
              "src": "523:15:44"
            },
            "id": 50556,
            "nodeType": "InheritanceSpecifier",
            "src": "523:15:44"
          }
        ],
        "canonicalName": "ExchangeOfContact",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 50552,
          "nodeType": "StructuredDocumentation",
          "src": "364:119:44",
          "text": " @title ExchangeOfContact\n @author Hone1er\n @notice A contract that rewards users for Exchange of Contact"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [50765, 49971, 49215, 49902],
        "name": "ExchangeOfContact",
        "nameLocation": "493:17:44",
        "scope": 50766,
        "usedErrors": [
          49081, 49086, 49346, 49627, 49632, 49635, 49916, 50583, 50585
        ],
        "usedEvents": [49092, 50581]
      }
    ],
    "license": "MIT"
  },
  "id": 44
}
