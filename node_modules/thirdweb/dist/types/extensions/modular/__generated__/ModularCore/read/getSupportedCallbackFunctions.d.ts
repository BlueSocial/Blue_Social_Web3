import type { BaseTransactionOptions } from "../../../../../transaction/types.js";
import type { Hex } from "../../../../../utils/encoding/hex.js";
import type { ThirdwebContract } from "../../../../../contract/contract.js";
export declare const FN_SELECTOR: "0xf147db8a";
/**
 * Checks if the `getSupportedCallbackFunctions` method is supported by the given contract.
 * @param contract The ThirdwebContract.
 * @returns A promise that resolves to a boolean indicating if the `getSupportedCallbackFunctions` method is supported.
 * @extension MODULAR
 * @example
 * ```ts
 * import { isGetSupportedCallbackFunctionsSupported } from "thirdweb/extensions/modular";
 *
 * const supported = await isGetSupportedCallbackFunctionsSupported(contract);
 * ```
 */
export declare function isGetSupportedCallbackFunctionsSupported(contract: ThirdwebContract<any>): Promise<boolean>;
/**
 * Decodes the result of the getSupportedCallbackFunctions function call.
 * @param result - The hexadecimal result to decode.
 * @returns The decoded result as per the FN_OUTPUTS definition.
 * @extension MODULAR
 * @example
 * ```ts
 * import { decodeGetSupportedCallbackFunctionsResult } from "thirdweb/extensions/modular";
 * const result = decodeGetSupportedCallbackFunctionsResult("...");
 * ```
 */
export declare function decodeGetSupportedCallbackFunctionsResult(result: Hex): readonly {
    selector: `0x${string}`;
    mode: number;
}[];
/**
 * Calls the "getSupportedCallbackFunctions" function on the contract.
 * @param options - The options for the getSupportedCallbackFunctions function.
 * @returns The parsed result of the function call.
 * @extension MODULAR
 * @example
 * ```ts
 * import { getSupportedCallbackFunctions } from "thirdweb/extensions/modular";
 *
 * const result = await getSupportedCallbackFunctions({
 *  contract,
 * });
 *
 * ```
 */
export declare function getSupportedCallbackFunctions(options: BaseTransactionOptions): Promise<readonly {
    selector: `0x${string}`;
    mode: number;
}[]>;
//# sourceMappingURL=getSupportedCallbackFunctions.d.ts.map