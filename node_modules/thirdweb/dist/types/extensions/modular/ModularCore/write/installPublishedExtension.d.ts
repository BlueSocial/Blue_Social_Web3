import type { Chain } from "../../../../chains/types.js";
import type { ThirdwebClient } from "../../../../client/client.js";
import type { ThirdwebContract } from "../../../../contract/contract.js";
import type { Account } from "../../../../wallets/interfaces/wallet.js";
export type InstallPublishedExtensionOptions = {
    client: ThirdwebClient;
    chain: Chain;
    account: Account;
    contract: ThirdwebContract;
    extensionName: string;
    publisherAddress: string;
    version?: string;
    constructorParams?: unknown[];
    extensionData?: `0x${string}`;
};
export declare function installPublishedExtension(options: InstallPublishedExtensionOptions): import("../../../../transaction/prepare-transaction.js").PreparedTransaction<any, import("abitype").AbiFunction, import("../../../../transaction/prepare-transaction.js").PrepareTransactionOptions>;
//# sourceMappingURL=installPublishedExtension.d.ts.map