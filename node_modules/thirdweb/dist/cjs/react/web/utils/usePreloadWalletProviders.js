"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.usePreloadWalletProviders = void 0;
const react_query_1 = require("@tanstack/react-query");
const constants_js_1 = require("../../../wallets/constants.js");
function usePreloadWalletProviders({ client, wallets, }) {
    (0, react_query_1.useQueries)({
        queries: wallets
            .filter((w) => w.id === constants_js_1.COINBASE || w.id === "inApp")
            .map((w) => ({
            queryKey: ["preload-wallet", w.id],
            queryFn: async () => {
                switch (w.id) {
                    case constants_js_1.COINBASE: {
                        const { getCoinbaseWebProvider } = await Promise.resolve().then(() => require("../../../wallets/coinbase/coinbaseWebSDK.js"));
                        await getCoinbaseWebProvider(w.getConfig());
                        // return _something_
                        return true;
                    }
                    case "inApp": {
                        const [{ InAppWebConnector }, { getOrCreateInAppWalletConnector },] = await Promise.all([
                            Promise.resolve().then(() => require("../../../wallets/in-app/web/lib/web-connector.js")),
                            Promise.resolve().then(() => require("../../../wallets/in-app/core/wallet/in-app-core.js")),
                        ]);
                        await getOrCreateInAppWalletConnector(client, async (client) => {
                            return new InAppWebConnector({
                                client,
                            });
                        });
                        // return _something_
                        return true;
                    }
                    // potentially add more wallets here
                    default: {
                        return false;
                    }
                }
            },
        })),
    });
}
exports.usePreloadWalletProviders = usePreloadWalletProviders;
//# sourceMappingURL=usePreloadWalletProviders.js.map