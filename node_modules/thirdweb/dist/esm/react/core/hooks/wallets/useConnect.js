import { useCallback, useState } from "react";
export function useConnectCore(manager, options) {
    const { connect } = manager;
    const [isConnecting, setIsConnecting] = useState(false);
    const [error, setError] = useState(null);
    const handleConnection = useCallback(async (walletOrFn) => {
        // reset error state
        setError(null);
        if (typeof walletOrFn !== "function") {
            return connect(walletOrFn, options);
        }
        setIsConnecting(true);
        try {
            const w = await walletOrFn();
            return connect(w, options);
        }
        catch (e) {
            console.error(e);
            setError(e);
        }
        finally {
            setIsConnecting(false);
        }
        return null;
    }, [connect, options]);
    return { connect: handleConnection, isConnecting, error };
}
//# sourceMappingURL=useConnect.js.map