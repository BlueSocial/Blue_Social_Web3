{"version":3,"file":"util.js","sourceRoot":"","sources":["../../../src/types/core/util.ts"],"names":[],"mappings":"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","sourcesContent":["// Copyright (c) 2018-2023 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\n\nimport BN from 'bn.js';\n\nimport { AddressString, BigIntString, HexString, IntNumber, RegExpString } from './type';\n\nconst INT_STRING_REGEX = /^[0-9]*$/;\nconst HEXADECIMAL_STRING_REGEX = /^[a-f0-9]*$/;\n\nexport function hexStringToUint8Array(hexString: string): Uint8Array {\n  return new Uint8Array(hexString.match(/.{1,2}/g)!.map((byte) => parseInt(byte, 16)));\n}\n\nexport function hexStringFromBuffer(buf: Buffer, includePrefix = false): HexString {\n  const hex = buf.toString('hex');\n  return HexString(includePrefix ? `0x${hex}` : hex);\n}\n\nexport function bigIntStringFromBN(bn: BN): BigIntString {\n  return BigIntString(bn.toString(10));\n}\n\nexport function intNumberFromHexString(hex: HexString): IntNumber {\n  return IntNumber(new BN(ensureEvenLengthHexString(hex, false), 16).toNumber());\n}\n\nexport function hexStringFromIntNumber(num: IntNumber): HexString {\n  return HexString(`0x${new BN(num).toString(16)}`);\n}\n\nexport function has0xPrefix(str: string): boolean {\n  return str.startsWith('0x') || str.startsWith('0X');\n}\n\nexport function strip0x(hex: string): string {\n  if (has0xPrefix(hex)) {\n    return hex.slice(2);\n  }\n  return hex;\n}\n\nexport function prepend0x(hex: string): string {\n  if (has0xPrefix(hex)) {\n    return `0x${hex.slice(2)}`;\n  }\n  return `0x${hex}`;\n}\n\nexport function isHexString(hex: unknown): hex is HexString {\n  if (typeof hex !== 'string') {\n    return false;\n  }\n  const s = strip0x(hex).toLowerCase();\n  return HEXADECIMAL_STRING_REGEX.test(s);\n}\n\nclass InvalidParamsError extends Error {\n  code = -32602;\n  constructor(message: string) {\n    super(message);\n  }\n}\n\nexport function ensureHexString(hex: unknown, includePrefix = false): HexString {\n  if (typeof hex === 'string') {\n    const s = strip0x(hex).toLowerCase();\n    if (HEXADECIMAL_STRING_REGEX.test(s)) {\n      return HexString(includePrefix ? `0x${s}` : s);\n    }\n  }\n  throw new InvalidParamsError(`\"${String(hex)}\" is not a hexadecimal string`);\n}\n\nexport function ensureEvenLengthHexString(hex: unknown, includePrefix = false): HexString {\n  let h = ensureHexString(hex, false);\n  if (h.length % 2 === 1) {\n    h = HexString(`0${h}`);\n  }\n  return includePrefix ? HexString(`0x${h}`) : h;\n}\n\nexport function ensureAddressString(str: unknown): AddressString {\n  if (typeof str === 'string') {\n    const s = strip0x(str).toLowerCase();\n    if (isHexString(s) && s.length === 40) {\n      return AddressString(prepend0x(s));\n    }\n  }\n  throw new InvalidParamsError(`Invalid Ethereum address: ${String(str)}`);\n}\n\nexport function ensureBuffer(str: unknown): Buffer {\n  if (Buffer.isBuffer(str)) {\n    return str;\n  }\n  if (typeof str === 'string') {\n    if (isHexString(str)) {\n      const s = ensureEvenLengthHexString(str, false);\n      return Buffer.from(s, 'hex');\n    }\n    return Buffer.from(str, 'utf8');\n  }\n  throw new InvalidParamsError(`Not binary data: ${String(str)}`);\n}\n\nexport function ensureIntNumber(num: unknown): IntNumber {\n  if (typeof num === 'number' && Number.isInteger(num)) {\n    return IntNumber(num);\n  }\n  if (typeof num === 'string') {\n    if (INT_STRING_REGEX.test(num)) {\n      return IntNumber(Number(num));\n    }\n    if (isHexString(num)) {\n      return IntNumber(new BN(ensureEvenLengthHexString(num, false), 16).toNumber());\n    }\n  }\n  throw new InvalidParamsError(`Not an integer: ${String(num)}`);\n}\n\nexport function ensureRegExpString(regExp: unknown): RegExpString {\n  if (regExp instanceof RegExp) {\n    return RegExpString(regExp.toString());\n  }\n  throw new InvalidParamsError(`Not a RegExp: ${String(regExp)}`);\n}\n\nexport function ensureBN(val: unknown): BN {\n  if (val !== null && (BN.isBN(val) || isBigNumber(val))) {\n    return new BN((val as any).toString(10), 10);\n  }\n  if (typeof val === 'number') {\n    return new BN(ensureIntNumber(val));\n  }\n  if (typeof val === 'string') {\n    if (INT_STRING_REGEX.test(val)) {\n      return new BN(val, 10);\n    }\n    if (isHexString(val)) {\n      return new BN(ensureEvenLengthHexString(val, false), 16);\n    }\n  }\n  throw new InvalidParamsError(`Not an integer: ${String(val)}`);\n}\n\nexport function ensureParsedJSONObject<T extends object>(val: unknown): T {\n  if (typeof val === 'string') {\n    return JSON.parse(val) as T;\n  }\n\n  if (typeof val === 'object') {\n    return val as T;\n  }\n\n  throw new InvalidParamsError(`Not a JSON string or an object: ${String(val)}`);\n}\n\nexport function isBigNumber(val: unknown): boolean {\n  if (val == null || typeof (val as any).constructor !== 'function') {\n    return false;\n  }\n  const { constructor } = val as any;\n  return typeof constructor.config === 'function' && typeof constructor.EUCLID === 'number';\n}\n"]}