{"version":3,"file":"Web3Provider.js","sourceRoot":"","sources":["../../../src/types/provider/Web3Provider.ts"],"names":[],"mappings":"AAAA,qEAAqE;AACrE,iDAAiD","sourcesContent":["// Copyright (c) 2018-2023 Coinbase, Inc. <https://www.coinbase.com/>\n// Licensed under the Apache License, version 2.0\n\nimport { Callback } from '../core/type';\nimport { JSONRPCRequest, JSONRPCResponse } from './JSONRPC';\n\nexport interface Web3Provider {\n  send(request: JSONRPCRequest): JSONRPCResponse;\n  send(request: JSONRPCRequest[]): JSONRPCResponse[];\n  send(request: JSONRPCRequest, callback: Callback<JSONRPCResponse>): void;\n  send(request: JSONRPCRequest[], callback: Callback<JSONRPCResponse[]>): void;\n  send<T = unknown>(method: string, params?: unknown[] | unknown): Promise<T>;\n\n  sendAsync(request: JSONRPCRequest, callback: Callback<JSONRPCResponse>): void;\n  sendAsync(request: JSONRPCRequest[], callback: Callback<JSONRPCResponse[]>): void;\n\n  request<T>(args: RequestArguments): Promise<T>;\n\n  host: string;\n  connected: boolean;\n  chainId: string;\n  supportsSubscriptions(): boolean;\n  disconnect(): boolean;\n}\n\nexport interface RequestArguments {\n  /** The RPC method to request. */\n  method: string;\n\n  /** The params of the RPC method, if any. */\n  params?: unknown;\n}\n"]}