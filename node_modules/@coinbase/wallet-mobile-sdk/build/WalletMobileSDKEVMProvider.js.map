{"version":3,"file":"WalletMobileSDKEVMProvider.js","sourceRoot":"","sources":["../src/WalletMobileSDKEVMProvider.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  RequestArguments,\n  Web3Provider,\n} from \"./types/provider/Web3Provider\";\nimport {\n  JSONRPCRequest,\n  JSONRPCResponse,\n} from \"./types/provider/JSONRPC\";\nimport {\n  AddressString,\n  Callback,\n  IntNumber,\n} from \"./types/core/type\";\nimport { ethErrors } from \"eth-rpc-errors\";\nimport {\n  initiateHandshake,\n  isConnected,\n  makeRequest,\n  resetSession,\n} from \"./CoinbaseWalletSDK\";\nimport { Account, Action, Result } from \"./CoinbaseWalletSDK.types\";\nimport {\n  bigIntStringFromBN,\n  ensureAddressString,\n  ensureBN,\n  ensureBuffer,\n  ensureIntNumber,\n  ensureParsedJSONObject,\n  hexStringFromBuffer,\n  hexStringFromIntNumber,\n  prepend0x,\n} from \"./types/core/util\";\nimport BN from \"bn.js\";\nimport { MMKV, NativeMMKV } from \"react-native-mmkv\";\nimport SafeEventEmitter from \"@metamask/safe-event-emitter\";\n\nglobal.Buffer = global.Buffer || require(\"buffer\").Buffer;\n\nconst CACHED_ADDRESSES_KEY = \"mobile_sdk.addresses\";\nconst CHAIN_ID_KEY = \"mobile_sdk.chain_id\";\n\nexport interface WalletMobileSDKProviderOptions {\n  chainId?: number;\n  storage?: KVStorage;\n  jsonRpcUrl?: string;\n  address?: string;\n}\n\nexport interface KVStorage\n  extends Pick<NativeMMKV, \"set\" | \"getString\" | \"delete\"> {}\n\ninterface AddEthereumChainParams {\n  chainId: string;\n  blockExplorerUrls?: string[];\n  chainName?: string;\n  iconUrls?: string[];\n  rpcUrls?: string[];\n  nativeCurrency?: {\n    name: string;\n    symbol: string;\n    decimals: number;\n  };\n}\n\ninterface SwitchEthereumChainParams {\n  chainId: string;\n}\n\ninterface WatchAssetParams {\n  type: string;\n  options: {\n    address: string;\n    symbol?: string;\n    decimals?: number;\n    image?: string;\n  };\n}\n\ninterface EthereumTransactionParams {\n  fromAddress: AddressString;\n  toAddress: AddressString | null;\n  weiValue: BN;\n  data: Buffer;\n  nonce: IntNumber | null;\n  gasPriceInWei: BN | null;\n  maxFeePerGas: BN | null; // in wei\n  maxPriorityFeePerGas: BN | null; // in wei\n  gasLimit: BN | null;\n  chainId: IntNumber;\n}\n\nexport class WalletMobileSDKEVMProvider\n  extends SafeEventEmitter\n  implements Web3Provider\n{\n  private _chainId?: number;\n  private _jsonRpcUrl?: string;\n  private _addresses: AddressString[] = [];\n  private _storage: KVStorage;\n\n  constructor(opts?: WalletMobileSDKProviderOptions) {\n    super();\n\n    this.send = this.send.bind(this);\n    this.sendAsync = this.sendAsync.bind(this);\n    this.request = this.request.bind(this);\n    this._updateChainId = this._updateChainId.bind(this);\n    this._setAddresses = this._setAddresses.bind(this);\n    this._getChainId = this._getChainId.bind(this);\n\n    this._storage = opts?.storage ?? new MMKV({ id: \"mobile_sdk.store\" });\n    this._chainId = opts?.chainId;\n    this._jsonRpcUrl = opts?.jsonRpcUrl;\n\n    const chainId = this._chainId ?? this._getChainId();\n    const chainIdStr = prepend0x(chainId.toString(16));\n    this.emit(\"connect\", { chainId: chainIdStr });\n\n    const cachedAddresses =\n      opts?.address ?? this._storage.getString(CACHED_ADDRESSES_KEY);\n    if (cachedAddresses) {\n      const addresses = cachedAddresses.split(\" \") as AddressString[];\n      if (addresses[0] && addresses[0] !== \"\") {\n        this._setAddresses(addresses);\n      }\n    }\n  }\n\n  public get selectedAddress(): AddressString | undefined {\n    return this._addresses[0] || undefined;\n  }\n\n  public get networkVersion(): string {\n    return this._getChainId().toString(10);\n  }\n\n  public get host(): string {\n    if (this._jsonRpcUrl) {\n      return this._jsonRpcUrl;\n    } else {\n      throw new Error(\"No jsonRpcUrl provided\");\n    }\n  }\n\n  public get connected(): boolean {\n    return isConnected();\n  }\n\n  public get chainId(): string {\n    return prepend0x(this._getChainId().toString(16));\n  }\n\n  public supportsSubscriptions(): boolean {\n    return false;\n  }\n\n  public disconnect(): boolean {\n    resetSession();\n    this._addresses = [];\n    this._storage.delete(CACHED_ADDRESSES_KEY);\n    this.emit(\"disconnect\");\n    return true;\n  }\n\n  private _send = this.send.bind(this);\n  private _sendAsync = this.sendAsync.bind(this);\n\n  public send(request: JSONRPCRequest): JSONRPCResponse;\n  public send(request: JSONRPCRequest[]): JSONRPCResponse[];\n  public send(\n    request: JSONRPCRequest,\n    callback: Callback<JSONRPCResponse>\n  ): void;\n  public send(\n    request: JSONRPCRequest[],\n    callback: Callback<JSONRPCResponse[]>\n  ): void;\n  public send<T = any>(method: string, params?: any[] | any): Promise<T>;\n  public send(\n    requestOrMethod: JSONRPCRequest | JSONRPCRequest[] | string,\n    callbackOrParams?:\n      | Callback<JSONRPCResponse>\n      | Callback<JSONRPCResponse[]>\n      | any[]\n      | any\n  ): JSONRPCResponse | JSONRPCResponse[] | void | Promise<any> {\n    // send<T>(method, params): Promise<T>\n    if (typeof requestOrMethod === \"string\") {\n      const method = requestOrMethod;\n      const params = Array.isArray(callbackOrParams)\n        ? callbackOrParams\n        : callbackOrParams !== undefined\n        ? [callbackOrParams]\n        : [];\n      const request: JSONRPCRequest = {\n        jsonrpc: \"2.0\",\n        id: 0,\n        method,\n        params,\n      };\n      return this._sendRequestAsync(request).then((res) => res.result);\n    }\n\n    // send(JSONRPCRequest | JSONRPCRequest[], callback): void\n    if (typeof callbackOrParams === \"function\") {\n      const request = requestOrMethod as any;\n      const callback = callbackOrParams;\n      return this._sendAsync(request, callback);\n    }\n\n    // send(JSONRPCRequest[]): JSONRPCResponse[]\n    if (Array.isArray(requestOrMethod)) {\n      const requests = requestOrMethod;\n      return requests.map((r) => this._sendRequest(r));\n    }\n\n    // send(JSONRPCRequest): JSONRPCResponse\n    const req: JSONRPCRequest = requestOrMethod;\n    return this._sendRequest(req);\n  }\n\n  public sendAsync(\n    request: JSONRPCRequest,\n    callback: Callback<JSONRPCResponse>\n  ): void;\n  public sendAsync(\n    request: JSONRPCRequest[],\n    callback: Callback<JSONRPCResponse[]>\n  ): void;\n  public async sendAsync(\n    request: JSONRPCRequest | JSONRPCRequest[],\n    callback: Callback<JSONRPCResponse> | Callback<JSONRPCResponse[]>\n  ): Promise<void> {\n    if (typeof callback !== \"function\") {\n      throw new Error(\"callback is required\");\n    }\n\n    // send(JSONRPCRequest[], callback): void\n    if (Array.isArray(request)) {\n      const arrayCb = callback as Callback<JSONRPCResponse[]>;\n      this._sendMultipleRequestsAsync(request)\n        .then((responses) => arrayCb(null, responses))\n        .catch((err) => arrayCb(err, null));\n      return;\n    }\n\n    // send(JSONRPCRequest, callback): void\n    const cb = callback as Callback<JSONRPCResponse>;\n    return this._sendRequestAsync(request)\n      .then((response) => cb(null, response))\n      .catch((err) => cb(err, null));\n  }\n\n  // request\n  public async request<T>(args: RequestArguments): Promise<T> {\n    if (!args || typeof args !== \"object\" || Array.isArray(args)) {\n      throw ethErrors.rpc.invalidRequest({\n        message: \"Expected a single, non-array, object argument.\",\n        data: args,\n      });\n    }\n\n    const { method, params } = args;\n\n    if (typeof method !== \"string\" || method.length === 0) {\n      throw ethErrors.rpc.invalidRequest({\n        message: \"'args.method' must be a non-empty string.\",\n        data: args,\n      });\n    }\n\n    if (\n      params !== undefined &&\n      !Array.isArray(params) &&\n      (typeof params !== \"object\" || params === null)\n    ) {\n      throw ethErrors.rpc.invalidRequest({\n        message: \"'args.params' must be an object or array if provided.\",\n        data: args,\n      });\n    }\n\n    const newParams = params === undefined ? [] : params;\n\n    const id = 0;\n    const result = await this._sendRequestAsync({\n      method,\n      params: newParams,\n      jsonrpc: \"2.0\",\n      id,\n    });\n\n    return result.result as T;\n  }\n\n  private _sendRequest(request: JSONRPCRequest): JSONRPCResponse {\n    const result = this._handleSynchronousMethods(request);\n    if (result === undefined) {\n      throw ethErrors.provider.unsupportedMethod(\n        `Unsupported synchronous method: ${request.method}`\n      );\n    }\n\n    return {\n      jsonrpc: \"2.0\",\n      id: request.id,\n      result,\n    };\n  }\n\n  private _sendMultipleRequestsAsync(\n    requests: JSONRPCRequest[]\n  ): Promise<JSONRPCResponse[]> {\n    return Promise.all(requests.map((r) => this._sendRequestAsync(r))); // TODO: Request batching\n  }\n\n  private _sendRequestAsync(request: JSONRPCRequest): Promise<JSONRPCResponse> {\n    return new Promise<JSONRPCResponse>((resolve, reject) => {\n      try {\n        // Handle synchronous methods\n        const syncResult = this._handleSynchronousMethods(request);\n        if (syncResult !== undefined) {\n          return resolve({\n            jsonrpc: \"2.0\",\n            id: request.id,\n            result: syncResult,\n          });\n        }\n      } catch (error) {\n        return reject(error);\n      }\n\n      // Handle asynchronous methods\n      this._handleAsynchronouseMethods(request)\n        .then((res) => res && resolve({ ...res, id: request.id }))\n        .catch((error) => reject(error));\n    });\n  }\n\n  private _handleSynchronousMethods({ method }: JSONRPCRequest) {\n    switch (method) {\n      case \"eth_accounts\":\n        return this._eth_accounts();\n      case \"eth_coinbase\":\n        return this._eth_coinbase();\n      case \"net_version\":\n        return this._net_version();\n      case \"eth_chainId\":\n        return this._eth_chainId();\n      default:\n        return undefined;\n    }\n  }\n\n  private async _handleAsynchronouseMethods(\n    request: JSONRPCRequest\n  ): Promise<JSONRPCResponse | void> {\n    const method = request.method;\n    const params = request.params || [];\n\n    switch (method) {\n      case \"eth_requestAccounts\":\n        return this._eth_requestAccounts();\n      case \"personal_sign\":\n        return this._personal_sign(params);\n      case \"eth_signTypedData_v3\":\n        return this._eth_signTypedData(params, \"v3\");\n      case \"eth_signTypedData_v4\":\n        return this._eth_signTypedData(params, \"v4\");\n      case \"eth_signTransaction\":\n        return this._eth_signTransaction(params, false);\n      case \"eth_sendTransaction\":\n        return this._eth_signTransaction(params, true);\n      case \"wallet_switchEthereumChain\":\n        return this._wallet_switchEthereumChain(params);\n      case \"wallet_addEthereumChain\":\n        return this._wallet_addEthereumChain(params);\n      case \"wallet_watchAsset\":\n        return this._wallet_watchAsset(params);\n      default:\n        if (this._jsonRpcUrl) {\n          return this._makeEthereumJsonRpcRequest(request, this._jsonRpcUrl);\n        } else {\n          throw ethErrors.provider.unsupportedMethod({\n            message: `Unsupported method: ${method}`,\n          });\n        }\n    }\n  }\n\n  private _eth_accounts(): string[] {\n    return [...this._addresses];\n  }\n\n  private _eth_coinbase(): string | null {\n    return this.selectedAddress ?? null;\n  }\n\n  private _net_version(): string {\n    return this._getChainId().toString(10);\n  }\n\n  private _eth_chainId(): string {\n    return hexStringFromIntNumber(this._getChainId());\n  }\n\n  private async _eth_requestAccounts(): Promise<JSONRPCResponse> {\n    const action: Action = {\n      method: \"eth_requestAccounts\",\n      params: {},\n    };\n\n    const [, account] = await this._makeHandshakeRequest(action);\n    this._setAddresses([account.address]);\n    return {\n      jsonrpc: \"2.0\",\n      id: 0,\n      result: [account.address],\n    };\n  }\n\n  private async _personal_sign(params: unknown[]): Promise<JSONRPCResponse> {\n    this._requireAuthorization();\n    const message = ensureBuffer(params[0]);\n    const address = ensureAddressString(params[1]);\n\n    const action: Action = {\n      method: \"personal_sign\",\n      params: {\n        message,\n        address,\n      },\n    };\n\n    const res = await this._makeSDKRequest(action);\n    return {\n      jsonrpc: \"2.0\",\n      id: 0,\n      result: res,\n    };\n  }\n\n  private async _eth_signTypedData(\n    params: unknown[],\n    type: \"v3\" | \"v4\"\n  ): Promise<JSONRPCResponse> {\n    this._requireAuthorization();\n    const address = ensureAddressString(params[0]);\n    const typedDataJson = JSON.stringify(ensureParsedJSONObject(params[1]));\n\n    const action: Action = {\n      method:\n        type === \"v3\"\n          ? \"eth_signTypedData_v3\"\n          : \"eth_signTypedData_v4\",\n      params: {\n        address,\n        typedDataJson,\n      },\n    };\n\n    const res = await this._makeSDKRequest(action);\n    return {\n      jsonrpc: \"2.0\",\n      id: 0,\n      result: res,\n    };\n  }\n\n  private async _eth_signTransaction(\n    params: unknown[],\n    shouldSubmit: boolean\n  ): Promise<JSONRPCResponse> {\n    this._requireAuthorization();\n    const tx = this._prepareTransactionParams((params[0] as any) || {});\n    const action: Action = {\n      method: shouldSubmit\n        ? \"eth_sendTransaction\"\n        : \"eth_signTransaction\",\n      params: {\n        fromAddress: tx.fromAddress,\n        toAddress: tx.toAddress,\n        weiValue: bigIntStringFromBN(tx.weiValue),\n        data: hexStringFromBuffer(tx.data),\n        nonce: tx.nonce,\n        gasPriceInWei: tx.gasPriceInWei\n          ? bigIntStringFromBN(tx.gasPriceInWei)\n          : null,\n        maxFeePerGas: tx.maxFeePerGas\n          ? bigIntStringFromBN(tx.maxFeePerGas)\n          : null,\n        maxPriorityFeePerGas: tx.maxPriorityFeePerGas\n          ? bigIntStringFromBN(tx.maxPriorityFeePerGas)\n          : null,\n        gasLimit: tx.gasLimit ? bigIntStringFromBN(tx.gasLimit) : null,\n        chainId: tx.chainId.toString(),\n      },\n    };\n\n    const res = await this._makeSDKRequest(action);\n    return {\n      jsonrpc: \"2.0\",\n      id: 0,\n      result: res,\n    };\n  }\n\n  private _prepareTransactionParams(tx: {\n    from?: unknown;\n    to?: unknown;\n    gasPrice?: unknown;\n    maxFeePerGas?: unknown;\n    maxPriorityFeePerGas?: unknown;\n    gas?: unknown;\n    value?: unknown;\n    data?: unknown;\n    nonce?: unknown;\n    chainId?: unknown;\n  }): EthereumTransactionParams {\n    const fromAddress = tx.from ? ensureAddressString(tx.from) : null;\n    if (!fromAddress) {\n      throw new Error(\"Ethereum address is unavailable\");\n    }\n\n    const toAddress = tx.to ? ensureAddressString(tx.to) : null;\n    const weiValue = tx.value != null ? ensureBN(tx.value) : new BN(0);\n    const data = tx.data ? ensureBuffer(tx.data) : Buffer.alloc(0);\n    const nonce = tx.nonce != null ? ensureIntNumber(tx.nonce) : null;\n    const gasPriceInWei = tx.gasPrice != null ? ensureBN(tx.gasPrice) : null;\n    const maxFeePerGas =\n      tx.maxFeePerGas != null ? ensureBN(tx.maxFeePerGas) : null;\n    const maxPriorityFeePerGas =\n      tx.maxPriorityFeePerGas != null\n        ? ensureBN(tx.maxPriorityFeePerGas)\n        : null;\n    const gasLimit = tx.gas != null ? ensureBN(tx.gas) : null;\n    const chainId = tx.chainId ? ensureIntNumber(tx.chainId) : this._getChainId();\n\n    return {\n      fromAddress,\n      toAddress,\n      weiValue,\n      data,\n      nonce,\n      gasPriceInWei,\n      maxFeePerGas,\n      maxPriorityFeePerGas,\n      gasLimit,\n      chainId,\n    };\n  }\n\n  private async _wallet_switchEthereumChain(\n    params: unknown[]\n  ): Promise<JSONRPCResponse> {\n    this._requireAuthorization();\n    const request = params[0] as SwitchEthereumChainParams;\n    const chainId = parseInt(request.chainId, 16);\n\n    const successResponse: JSONRPCResponse = {\n      jsonrpc: \"2.0\",\n      id: 0,\n      result: null,\n    };\n\n    if (ensureIntNumber(chainId) === this._getChainId()) {\n      return successResponse;\n    }\n\n    const action: Action = {\n      method: \"wallet_switchEthereumChain\",\n      params: {\n        chainId: chainId.toString(),\n      },\n    };\n\n    const res = await this._makeSDKRequest(action);\n    if (res === null) {\n      this._updateChainId(chainId);\n    }\n    return {\n      jsonrpc: \"2.0\",\n      id: 0,\n      result: res,\n    };\n  }\n\n  private async _wallet_addEthereumChain(\n    params: unknown[]\n  ): Promise<JSONRPCResponse> {\n    this._requireAuthorization();\n    const request = params[0] as AddEthereumChainParams;\n\n    if (!request.rpcUrls || request.rpcUrls?.length === 0) {\n      throw ethErrors.rpc.invalidParams({\n        message: \"please pass in at least 1 rpcUrl\",\n      });\n    }\n\n    if (!request.chainName || request.chainName.trim() === \"\") {\n      throw ethErrors.rpc.invalidParams({\n        message: \"chainName is a required field\",\n      });\n    }\n\n    if (!request.nativeCurrency) {\n      throw ethErrors.rpc.invalidParams({\n        message: \"nativeCurrency is a required field\",\n      });\n    }\n\n    const chainIdNumber = parseInt(request.chainId, 16);\n\n    const action: Action = {\n      method: \"wallet_addEthereumChain\",\n      params: {\n        chainId: chainIdNumber.toString(),\n        blockExplorerUrls: request.blockExplorerUrls ?? null,\n        chainName: request.chainName ?? null,\n        iconUrls: request.iconUrls ?? null,\n        nativeCurrency: request.nativeCurrency ?? null,\n        rpcUrls: request.rpcUrls ?? [],\n      },\n    };\n\n    const res = await this._makeSDKRequest(action);\n    return {\n      jsonrpc: \"2.0\",\n      id: 0,\n      result: res,\n    };\n  }\n\n  private async _wallet_watchAsset(params: unknown): Promise<JSONRPCResponse> {\n    this._requireAuthorization();\n    const request = (\n      Array.isArray(params) ? params[0] : params\n    ) as WatchAssetParams;\n\n    if (!request.type) {\n      throw ethErrors.rpc.invalidParams({\n        message: \"Type is required\",\n      });\n    }\n\n    if (request?.type !== \"ERC20\") {\n      throw ethErrors.rpc.invalidParams({\n        message: `Asset of type '${request.type}' is not supported`,\n      });\n    }\n\n    if (!request?.options) {\n      throw ethErrors.rpc.invalidParams({\n        message: \"Options are required\",\n      });\n    }\n\n    if (!request?.options.address) {\n      throw ethErrors.rpc.invalidParams({\n        message: \"Address is required\",\n      });\n    }\n\n    const { address, symbol, image, decimals } = request.options;\n\n    const action: Action = {\n      method: \"wallet_watchAsset\",\n      params: {\n        type: request.type,\n        options: {\n          address,\n          symbol: symbol ?? null,\n          decimals: decimals ?? null,\n          image: image ?? null,\n        },\n      },\n    };\n\n    const res = await this._makeSDKRequest(action);\n    return {\n      jsonrpc: \"2.0\",\n      id: 0,\n      result: res,\n    };\n  }\n\n  private async _makeEthereumJsonRpcRequest(\n    request: JSONRPCRequest,\n    jsonRpcUrl: string\n  ): Promise<JSONRPCResponse> {\n    return fetch(jsonRpcUrl, {\n      method: \"POST\",\n      body: JSON.stringify(request),\n      mode: \"cors\",\n      headers: { \"Content-Type\": \"application/json\" },\n    })\n      .then((res) => res.json())\n      .then((json) => {\n        if (!json) {\n          throw ethErrors.rpc.parse();\n        }\n\n        const response = json as JSONRPCResponse;\n        if (response.error) {\n          throw ethErrors.provider.custom(response.error);\n        }\n\n        return response;\n      });\n  }\n\n  private async _makeHandshakeRequest(\n    action: Action\n  ): Promise<[unknown, Account]> {\n    try {\n      const [[res], account] = await initiateHandshake([action]);\n      if (!res.result || !account) {\n        throw this._getProviderError(res);\n      }\n      return [JSON.parse(res.result), account];\n    } catch (error) {\n      if (error.message.match(/(session not found|session expired)/i)) {\n        this.disconnect();\n        throw ethErrors.provider.disconnected(error.message);\n      }\n\n      if (error.message.match(/(denied|rejected)/i)) {\n        throw ethErrors.provider.userRejectedRequest();\n      }\n\n      throw error;\n    }\n  }\n\n  private async _makeSDKRequest(action: Action): Promise<unknown> {\n    try {\n      const [res] = await makeRequest([action]);\n      if (res.errorMessage || !res.result) {\n        throw this._getProviderError(res);\n      }\n      return JSON.parse(res.result);\n    } catch (error) {\n      if (error.message.match(/(session not found|session expired)/i)) {\n        this.disconnect();\n        throw ethErrors.provider.disconnected(error.message);\n      }\n\n      if (error.message.match(/(denied|rejected)/i)) {\n        throw ethErrors.provider.userRejectedRequest();\n      }\n\n      throw error;\n    }\n  }\n\n  private _getProviderError(result: Result) {\n    const errorMessage = result.errorMessage ?? \"\";\n    if (errorMessage.match(/(denied|rejected)/i)) {\n      return ethErrors.provider.userRejectedRequest();\n    } else {\n      return ethErrors.provider.custom({\n        code: result.errorCode ?? 1000,\n        message: errorMessage,\n      });\n    }\n  }\n\n  private _getChainId(): IntNumber {\n    const chainIdStr = this._storage.getString(CHAIN_ID_KEY) || \"1\";\n    const chainId = parseInt(chainIdStr, 10);\n    return ensureIntNumber(chainId);\n  }\n\n  private _updateChainId(chainId: number) {\n    const originalChainId = this._getChainId();\n    this._storage.set(CHAIN_ID_KEY, chainId.toString(10));\n    const chainChanged = ensureIntNumber(chainId) !== originalChainId;\n    if (chainChanged) {\n      this.emit(\"chainChanged\", prepend0x(this._getChainId().toString(16)));\n    }\n  }\n\n  private _setAddresses(addresses: string[]) {\n    const newAddresses = addresses.map((address) =>\n      ensureAddressString(address)\n    );\n\n    if (JSON.stringify(this._addresses) === JSON.stringify(newAddresses)) {\n      return;\n    }\n\n    this._addresses = newAddresses;\n    this._storage.set(CACHED_ADDRESSES_KEY, newAddresses.join(\" \"));\n    this.emit(\"accountsChanged\", this._addresses);\n  }\n\n  private _requireAuthorization() {\n    if (!this.connected) {\n      throw ethErrors.provider.unauthorized();\n    }\n  }\n}\n"]}